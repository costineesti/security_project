{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiti\\\\Desktop\\\\security_td\\\\securityfrontend\\\\src\\\\components\\\\WelcomeContent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DemoComponent from './DemoComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WelcomeContent() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState('');\n  useEffect(() => {\n    // Retrieve the authentication token from your authentication state or storage\n    const authToken = localStorage.getItem('authToken');\n    // Make an API call to retrieve user information, including the role, using the authentication token\n    axios.get('/api/user', {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      const {\n        role\n      } = response.data;\n      setIsLoggedIn(true);\n      setUserRole(role);\n    }).catch(error => {\n      setIsLoggedIn(false);\n      setUserRole('');\n      console.error('Error retrieving user information:', error);\n    });\n  }, []);\n  const renderContent = () => {\n    if (!isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login to see protected content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    } else {\n      if (userRole === 'USER') {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hello, User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n      } else if (userRole === 'ADMIN') {\n        return /*#__PURE__*/_jsxDEV(DemoComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(WelcomeContent, \"AcmOGttDWeGxh3pXcaF2qT6ezNs=\");\n_c = WelcomeContent;\nexport default WelcomeContent;\nvar _c;\n$RefreshReg$(_c, \"WelcomeContent\");","map":{"version":3,"names":["React","useEffect","useState","axios","DemoComponent","jsxDEV","_jsxDEV","WelcomeContent","_s","isLoggedIn","setIsLoggedIn","userRole","setUserRole","authToken","localStorage","getItem","get","headers","Authorization","then","response","role","data","catch","error","console","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chiti/Desktop/security_td/securityfrontend/src/components/WelcomeContent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DemoComponent from './DemoComponent';\r\n\r\nfunction WelcomeContent() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Retrieve the authentication token from your authentication state or storage\r\n    const authToken = localStorage.getItem('authToken');\r\n    // Make an API call to retrieve user information, including the role, using the authentication token\r\n    axios.get('/api/user', {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken}`\r\n      }\r\n    }).then(response => {\r\n      const { role } = response.data;\r\n      setIsLoggedIn(true);\r\n      setUserRole(role);\r\n    }).catch(error => {\r\n      setIsLoggedIn(false);\r\n      setUserRole('');\r\n      console.error('Error retrieving user information:', error);\r\n    });\r\n  }, []);\r\n\r\n  const renderContent = () => {\r\n    if (!isLoggedIn) {\r\n      return <p>Login to see protected content</p>;\r\n    } else {\r\n      if (userRole === 'USER') {\r\n        return <p>Hello, User</p>;\r\n      } else if (userRole === 'ADMIN') {\r\n        return <DemoComponent />;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome Content</h1>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD;IACAZ,KAAK,CAACa,GAAG,CAAC,WAAW,EAAE;MACrBC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,SAAU;MACrC;IACF,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;MAClB,MAAM;QAAEC;MAAK,CAAC,GAAGD,QAAQ,CAACE,IAAI;MAC9BZ,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACS,IAAI,CAAC;IACnB,CAAC,CAAC,CAACE,KAAK,CAACC,KAAK,IAAI;MAChBd,aAAa,CAAC,KAAK,CAAC;MACpBE,WAAW,CAAC,EAAE,CAAC;MACfa,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACjB,UAAU,EAAE;MACf,oBAAOH,OAAA;QAAAqB,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC9C,CAAC,MAAM;MACL,IAAIpB,QAAQ,KAAK,MAAM,EAAE;QACvB,oBAAOL,OAAA;UAAAqB,QAAA,EAAG;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC3B,CAAC,MAAM,IAAIpB,QAAQ,KAAK,OAAO,EAAE;QAC/B,oBAAOL,OAAA,CAACF,aAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1B;IACF;EACF,CAAC;EAED,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBL,aAAa,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACvB,EAAA,CAzCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}